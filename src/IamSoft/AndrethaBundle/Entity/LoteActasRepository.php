<?php

namespace IamSoft\AndrethaBundle\Entity;

use IamSoft\AndrethaBundle\lib\Utils;
use Doctrine\ORM\EntityRepository;

/**
 * LoteActasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LoteActasRepository extends EntityRepository
{
	public function findOneByLoteSolapadoConLoteYaDefinido(
		LoteActas $loteActas)
	{
		return $this->getEntityManager()
    	->createQuery(
    		'SELECT la '.
    		'FROM IamSoftAndrethaBundle:LoteActas la '.
    		'where '.
    			Utils::getExpresionWhereDistintoId('la.id', ':id').' and '.
    			Utils::getExpresionWhereSolapamiento('la.numPreImpresoIni',
    			 '(la.numPreImpresoIni+la.cantidad-1)', ':numPreImpresoIni', 
    				':numPreImpresoMax'))
    	->setParameters(array(
				'id' => $loteActas->getId(),
    		'numPreImpresoIni' => $loteActas->getNumPreImpresoIni(),
    		'numPreImpresoMax' => $loteActas->getNumPreImpresoIni()+
    			$loteActas->getCantidad()-1,
    	))
    	->setMaxResults(1)
      ->getSingleResult();
	}

	public function isLoteSolapadoConLoteYaDefinido(
		LoteActas $loteActas)
	{
		try {
			$this->findOneByLoteSolapadoConLoteYaDefinido($loteActas);
			return true;
		} catch (\Doctrine\Orm\NoResultException $e) {
			return false;
		}
	}
}
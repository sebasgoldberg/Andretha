<?php

namespace IamSoft\AndrethaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use IamSoft\AndrethaBundle\Entity\RegistroEscribano;
use IamSoft\AndrethaBundle\lib\Utils;

/**
 * RegistroEscribanoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RegistroEscribanoRepository extends EntityRepository
{
	public function findOneByPeriodoSolapadoConPeriodoYaDefinido(
		RegistroEscribano $registroEscribano)
	{
		return $this->getEntityManager()
    	->createQuery(
    		'SELECT re '.
    		'FROM IamSoftAndrethaBundle:RegistroEscribano re '.
    			'join re.registro r '.
    			'join re.escribano e '.
    		'where '.
    			Utils::getExpresionWhereDistintoId('re.id', ':id').' and '.
    			Utils::getExpresionWhereSolapamiento('re.fechaValidoDesde', 
    				're.fechaValidoHasta', ':fechaValidoDesde', 
    				':fechaValidoHasta').' and '.
    			'r.id = :registroId and '.
    			'e.id = :escribanoId ')
    	->setParameters(array(
				'id' => $registroEscribano->getId(),
    		'fechaValidoDesde' => $registroEscribano->getFechaValidoDesde(),
    		'fechaValidoHasta' => $registroEscribano->getFechaValidoHasta(),
    		'registroId' => $registroEscribano->getRegistro()->getId(),
    		'escribanoId' => $registroEscribano->getEscribano()->getId(),
    	))
    	->setMaxResults(1)
      ->getSingleResult();
	}

	public function isPeriodoSolapadoConPeriodoYaDefinido(
		RegistroEscribano $registroEscribano)
	{
		try {
			$this->findOneByPeriodoSolapadoConPeriodoYaDefinido($registroEscribano);
			return true;
		} catch (\Doctrine\Orm\NoResultException $e) {
			return false;
		}
	}
}